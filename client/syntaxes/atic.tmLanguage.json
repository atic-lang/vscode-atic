{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Atic",
    "foldingStartMarker": "\\{\\s*$",
    "foldingStopMarker": "^\\s*\\}",
    "patterns": [
        {
            "include": "#topLevel"
        }
    ],
    "repository": {
        "topLevel": {
            "name": "atic.top",
            "patterns": [
                {
                    "include": "#defineStatement"
                },
                {
                    "include": "#while"
                },
                {
                    "include": "#memberCall"
                },
                {
                    "include": "#if"
                },
                {
                    "include": "#memberAccess"
                },
                {
                    "match": "\\s*(true|false)\\s*",
                    "name": "constant.language.java"
                },
                {
                    "match": "\\s*[0-9]([0-9\\.]*)\\s*",
                    "name": "constant.numeric.decimal.java"
                },
                {
                    "include": "#enum"
                },
                {
                    "include": "#struct"
                },
                {
                    "match": "\\s*\\/\\/(.*)",
                    "captures": {
                        "1": {
                            "patterns": [
                                {
                                    "match": "(TODO)(.*)",
                                    "captures": {
                                        "1": {
                                            "name": "variable.parameter.java"
                                        },
                                        "2": {
                                            "name": "string.quoted.double.java"
                                        }
                                    }
                                },
                                {
                                    "match": ".*"
                                }
                            ]
                        }
                    },
                    "name": "comment.line.double-slash.java"
                },
                {
                    "include": "#function-head"
                },
                {
                    "include": "#keywords"
                },
                {
                    "include": "#string"
                },
                {
                    "include": "#operators"
                },
                {
                    "match": "=",
                    "name": "keyword.operator.arithmetic.java"
                },
                {
                    "match": "\\s*\\w+\\s*",
                    "name": "variable.other.object.java"
                },
                {
                    "match": "\\s*;\\s*",
                    "name": "punctuation.terminator.java"
                }
            ]
        },
        "operators": {
            "match": "\\s*(&&|\\|\\||\\+|-|\\/|\\*|>|<|>=|<=|==|!=|!)\\s*",
            "name": "keyword.operator.arithmetic.java"
        },
        "keywords": {
            "match": "\\s*\\b(let|const|fn|use|lst|if|else|while|enum|match|matches|global|logic|native|exception|strict|async|struct|try|throw|return)\\b\\s*",
            "name": "keyword.control.java"
        },
        "defineStatement": {
            "begin": "\\s*\\b(let|const)\\b\\s*(\\w+)\\s*",
            "captures": {
                "1": {
                    "name": "keyword.control.java"
                },
                "2": {
                    "name": "variable.other.definition.java"
                }
            },
            "patterns": [
                {
                    "match": "\\s*:\\s*",
                    "name": "keyword.operator.assignment.java"
                },
                {
                    "include": "#type"
                }
            ],
            "endCaptures": {
                "1": {
                    "name": "keyword.operator.assignment.java"
                }
            },
            "end": "\\s*(=)\\s*"
        },
        "while": {
            "match": "\\s*\\b(while)\\b\\s*",
            "name": "keyword.control.java"
        },
        "if": {
            "match": "\\s*\\b(if)\\b\\s*",
            "name": "keyword.control.java"
        },
        "memberAccess": {
            "match": "\\s*(\\.)\\s*(\\w+)",
            "captures": {
                "1": {
                    "name": "punctuation.separator.period.java"
                },
                "2": {
                    "name": "variable.other.object.property.java"
                }
            }
        },
        "string": {
            "patterns": [
                {
                    "begin": "\\s*\"",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.java"
                        }
                    },
                    "end": "\"",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.java"
                        }
                    },
                    "name": "string.quoted.double.java",
                    "patterns": [
                        {
                            "match": "\\\\.",
                            "name": "constant.character.escape.java"
                        }
                    ]
                },
                {
                    "begin": "\\s*'",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.java"
                        }
                    },
                    "end": "'",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.java"
                        }
                    },
                    "name": "string.quoted.single.java",
                    "patterns": [
                        {
                            "match": "\\\\.",
                            "name": "constant.character.escape.java"
                        }
                    ]
                }
            ]
        },
        "memberCall": {
            "begin": "\\s*(\\.)?\\s*(\\w+)\\s*(<(.*)>)?\\(",
            "name": "atic.function.call",
            "captures": {
                "1": {
                    "name": "punctuation.separator.period.java"
                },
                "2": {
                    "name": "entity.name.function.java"
                },
                "3": {
                    "name": "punctuation.bracket.angle.java"
                },
                "4": {
                    "patterns": [
                        {
                            "include": "#type"
                        }
                    ]
                }
            },
            "patterns": [
                {
                    "include": "#topLevel"
                }
            ],
            "end": "\\)"
        },
        "function-head": {
            "name": "atic.function.head",
            "begin": "^([^<]*)\\s*(\\bfn\\b)\\s*(<([^>]*)>)?\\s*",
            "beginCaptures": {
                "1": {
                    "patterns": [
                        {
                            "include": "#properties"
                        }
                    ]
                },
                "2": {
                    "name": "storage.modifier.java"
                },
                "3": {
                    "name": "punctuation.bracket.angle.java"
                },
                "4": {
                    "name": "punctuation.separator.delimiter.java",
                    "patterns": [
                        {
                            "match": "([^,]+)",
                            "captures": {
                                "1": {
                                    "patterns": [
                                        {
                                            "match": "\\s*(\\w+)\\s*",
                                            "captures": {
                                                "1": {
                                                    "name": "storage.type.generic.java"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    ]
                }
            },
            "patterns": [
                {
                    "match": "\\s*(\\w+)\\s*",
                    "captures": {
                        "1": {
                            "name": "entity.name.function.java"
                        }
                    }
                },
                {
                    "begin": "{",
                    "name": "punctuation.section.method.begin.bracket.curly.java",
                    "end": "}"
                },
                {
                    "include": "#functionInput"
                },
                {
                    "begin": "\\s*(->)\\s*",
                    "beginCaptures": {
                        "1": {
                            "name": "entity.name.function.java"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#type"
                        }
                    ],
                    "end": "(?={)"
                }
            ],
            "end": "(?={)"
        },
        "enum": {
            "begin": "\\s*(enum)\\s*(\\w+)\\s*{",
            "beginCaptures": {
                "1": {
                    "name": "storage.modifier.java"
                },
                "2": {
                    "name": "entity.name.type.class.java"
                }
            },
            "patterns": [
                {
                    "begin": "\\s*(\\w+)\\s*\\(",
                    "name": "punctuation.definition.parameters.begin.bracket.round.java",
                    "beginCaptures": {
                        "1": {
                            "name": "variable.other.definition.java"
                        }
                    },
                    "patterns": [
                        {
                            "match": "\\s*,\\s*",
                            "name": "punctuation.separator.delimiter.java"
                        },
                        {
                            "include": "#type"
                        }
                    ],
                    "end": "\\s*\\)\\s*"
                },
                {
                    "match": "\\s*;\\s*",
                    "name": "punctuation.terminator.java"
                }
            ],
            "end": "}"
        },
        "struct": {
            "begin": "\\s*(struct)\\s*(\\w+)\\s*{",
            "name": "atic.struct.body",
            "beginCaptures": {
                "1": {
                    "name": "storage.modifier.java"
                },
                "2": {
                    "name": "entity.name.type.class.java"
                }
            },
            "patterns": [
                {
                    "match": "\\s*(\\w+)\\s*(:)\\s*",
                    "captures": {
                        "1": {
                            "name": "variable.other.definition.java"
                        },
                        "2": {
                            "name": "keyword.control.ternary.java"
                        }
                    }
                },
                {
                    "include": "#type"
                },
                {
                    "match": "\\s*;\\s*",
                    "name": "punctuation.terminator.java"
                }
            ],
            "end": "\\s*}\\s*"
        },
        "properties": {
            "match": "(native|strict|async|exception)*\\s*",
            "name": "storage.modifier.java"
        },
        "functionInput": {
            "begin": "\\(",
            "name": "punctuation.definition.parameters.begin.bracket.round.java",
            "patterns": [
                {
                    "match": "\\s*,\\s*",
                    "name": "punctuation.separator.delimiter.java"
                },
                {
                    "begin": "\\s*(\\w+)(:)",
                    "beginCaptures": {
                        "1": {
                            "name": "variable.parameter.java"
                        },
                        "2": {
                            "name": "keyword.control.ternary.java"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#type"
                        }
                    ],
                    "end": "(?=(?:,|\\)))"
                },
                {
                    "match": "\\s*(\\w+)\\s*",
                    "captures": {
                        "1": {
                            "name": "variable.parameter.java"
                        }
                    }
                }
            ],
            "end": "\\)"
        },
        "type": {
            "name": "atic.type",
            "patterns": [
                {
                    "match": "\\s*\\b(fn)\\b\\s*",
                    "name": "keyword.control.java"
                },
                {
                    "match": "\\s*\\b(number|void|string|bool)\\b\\s*",
                    "name": "storage.type.primitive.java"
                },
                {
                    "match": "(\\w+)((\\.\\w+)*)",
                    "captures": {
                        "1": {
                            "name": "storage.type.java"
                        },
                        "2": {
                            "name": "storage.type.java",
                            "patterns": [
                                {
                                    "match": "\\s*\\.\\s*",
                                    "name": "punctuation.separator.period.java"
                                }
                            ]
                        }
                    }
                },
                {
                    "include": "#functionInput"
                },
                {
                    "match": "\\s*->\\s*",
                    "name": "entity.name.function.java"
                },
                {
                    "include": "#genericsOptionalType"
                }
            ]
        },
        "genericsOptionalType": {
            "begin": "\\s*(<)\\s*",
            "name": "atic.genericType",
            "beginCaptures": {
                "1": {
                    "name": "punctuation.bracket.angle.java"
                }
            },
            "patterns": [
                {
                    "match": "\\s*,\\s*",
                    "name": "punctuation.separator.delimiter.java"
                },
                {
                    "include": "#type"
                }
            ],
            "end": "\\s*(>)\\s*",
            "endCaptures": {
                "1": {
                    "name": "punctuation.bracket.angle.java"
                }
            }
        }
    },
    "scopeName": "source.atic"
}
